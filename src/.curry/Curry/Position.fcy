Prog "Curry.Position" ["Prelude"] [Type ("Curry.Position","Position") Public [] [Cons ("Curry.Position","Position") 2 Public [TCons ("Prelude","Int") [],TCons ("Prelude","Int") []],Cons ("Curry.Position","NoPos") 0 Public []]] [Func ("Curry.Position","_inst#Prelude.Eq#Curry.Position.Position") 0 Public (TCons ("Prelude","_Dict#Eq") [TCons ("Curry.Position","Position") []]) (Rule [] (Comb ConsCall ("Prelude","_Dict#Eq") [Comb (FuncPartCall 2) ("Curry.Position","_impl#==#Prelude.Eq#Curry.Position.Position") [],Comb FuncCall ("Curry.Position","_impl#/=#Prelude.Eq#Curry.Position.Position") []])),Func ("Curry.Position","_impl#==#Prelude.Eq#Curry.Position.Position") 2 Public (FuncType (TCons ("Curry.Position","Position") []) (FuncType (TCons ("Curry.Position","Position") []) (TCons ("Prelude","Bool") []))) (Rule [1,2] (Case Flex (Var 1) [Branch (Pattern ("Curry.Position","Position") [3,4]) (Case Flex (Var 2) [Branch (Pattern ("Curry.Position","Position") [5,6]) (Comb FuncCall ("Prelude","&&") [Comb FuncCall ("Prelude","_impl#==#Prelude.Eq#Prelude.Int") [Var 3,Var 5],Comb FuncCall ("Prelude","_impl#==#Prelude.Eq#Prelude.Int") [Var 4,Var 6]]),Branch (Pattern ("Curry.Position","NoPos") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("Curry.Position","NoPos") []) (Case Flex (Var 2) [Branch (Pattern ("Curry.Position","Position") [7,8]) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Curry.Position","NoPos") []) (Comb ConsCall ("Prelude","True") [])])])),Func ("Curry.Position","_impl#/=#Prelude.Eq#Curry.Position.Position") 0 Public (FuncType (TCons ("Curry.Position","Position") []) (FuncType (TCons ("Curry.Position","Position") []) (TCons ("Prelude","Bool") []))) (Rule [] (Comb (FuncPartCall 2) ("Prelude","_def#/=#Prelude.Eq") [Comb FuncCall ("Curry.Position","_inst#Prelude.Eq#Curry.Position.Position") []])),Func ("Curry.Position","_inst#Prelude.Ord#Curry.Position.Position") 0 Public (TCons ("Prelude","_Dict#Ord") [TCons ("Curry.Position","Position") []]) (Rule [] (Comb ConsCall ("Prelude","_Dict#Ord") [Comb FuncCall ("Curry.Position","_inst#Prelude.Eq#Curry.Position.Position") [],Comb FuncCall ("Curry.Position","_impl#compare#Prelude.Ord#Curry.Position.Position") [],Comb (FuncPartCall 2) ("Curry.Position","_impl#<=#Prelude.Ord#Curry.Position.Position") [],Comb FuncCall ("Curry.Position","_impl#>=#Prelude.Ord#Curry.Position.Position") [],Comb FuncCall ("Curry.Position","_impl#<#Prelude.Ord#Curry.Position.Position") [],Comb FuncCall ("Curry.Position","_impl#>#Prelude.Ord#Curry.Position.Position") [],Comb FuncCall ("Curry.Position","_impl#min#Prelude.Ord#Curry.Position.Position") [],Comb FuncCall ("Curry.Position","_impl#max#Prelude.Ord#Curry.Position.Position") []])),Func ("Curry.Position","_impl#compare#Prelude.Ord#Curry.Position.Position") 0 Public (FuncType (TCons ("Curry.Position","Position") []) (FuncType (TCons ("Curry.Position","Position") []) (TCons ("Prelude","Ordering") []))) (Rule [] (Comb (FuncPartCall 2) ("Prelude","_def#compare#Prelude.Ord") [Comb FuncCall ("Curry.Position","_inst#Prelude.Ord#Curry.Position.Position") []])),Func ("Curry.Position","_impl#<=#Prelude.Ord#Curry.Position.Position") 2 Public (FuncType (TCons ("Curry.Position","Position") []) (FuncType (TCons ("Curry.Position","Position") []) (TCons ("Prelude","Bool") []))) (Rule [1,2] (Case Flex (Var 1) [Branch (Pattern ("Curry.Position","Position") [3,4]) (Case Flex (Var 2) [Branch (Pattern ("Curry.Position","Position") [5,6]) (Comb FuncCall ("Prelude","||") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","_impl#<#Prelude.Ord#Prelude.Int") [],Var 3],Var 5],Comb FuncCall ("Prelude","&&") [Comb FuncCall ("Prelude","_impl#==#Prelude.Eq#Prelude.Int") [Var 3,Var 5],Comb FuncCall ("Prelude","_impl#<=#Prelude.Ord#Prelude.Int") [Var 4,Var 6]]]),Branch (Pattern ("Curry.Position","NoPos") []) (Comb ConsCall ("Prelude","True") [])]),Branch (Pattern ("Curry.Position","NoPos") []) (Case Flex (Var 2) [Branch (Pattern ("Curry.Position","Position") [7,8]) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Curry.Position","NoPos") []) (Comb ConsCall ("Prelude","True") [])])])),Func ("Curry.Position","_impl#>=#Prelude.Ord#Curry.Position.Position") 0 Public (FuncType (TCons ("Curry.Position","Position") []) (FuncType (TCons ("Curry.Position","Position") []) (TCons ("Prelude","Bool") []))) (Rule [] (Comb (FuncPartCall 2) ("Prelude","_def#>=#Prelude.Ord") [Comb FuncCall ("Curry.Position","_inst#Prelude.Ord#Curry.Position.Position") []])),Func ("Curry.Position","_impl#<#Prelude.Ord#Curry.Position.Position") 0 Public (FuncType (TCons ("Curry.Position","Position") []) (FuncType (TCons ("Curry.Position","Position") []) (TCons ("Prelude","Bool") []))) (Rule [] (Comb (FuncPartCall 2) ("Prelude","_def#<#Prelude.Ord") [Comb FuncCall ("Curry.Position","_inst#Prelude.Ord#Curry.Position.Position") []])),Func ("Curry.Position","_impl#>#Prelude.Ord#Curry.Position.Position") 0 Public (FuncType (TCons ("Curry.Position","Position") []) (FuncType (TCons ("Curry.Position","Position") []) (TCons ("Prelude","Bool") []))) (Rule [] (Comb (FuncPartCall 2) ("Prelude","_def#>#Prelude.Ord") [Comb FuncCall ("Curry.Position","_inst#Prelude.Ord#Curry.Position.Position") []])),Func ("Curry.Position","_impl#min#Prelude.Ord#Curry.Position.Position") 0 Public (FuncType (TCons ("Curry.Position","Position") []) (FuncType (TCons ("Curry.Position","Position") []) (TCons ("Curry.Position","Position") []))) (Rule [] (Comb (FuncPartCall 2) ("Prelude","_def#min#Prelude.Ord") [Comb FuncCall ("Curry.Position","_inst#Prelude.Ord#Curry.Position.Position") []])),Func ("Curry.Position","_impl#max#Prelude.Ord#Curry.Position.Position") 0 Public (FuncType (TCons ("Curry.Position","Position") []) (FuncType (TCons ("Curry.Position","Position") []) (TCons ("Curry.Position","Position") []))) (Rule [] (Comb (FuncPartCall 2) ("Prelude","_def#max#Prelude.Ord") [Comb FuncCall ("Curry.Position","_inst#Prelude.Ord#Curry.Position.Position") []])),Func ("Curry.Position","_inst#Prelude.Show#Curry.Position.Position") 0 Public (TCons ("Prelude","_Dict#Show") [TCons ("Curry.Position","Position") []]) (Rule [] (Comb ConsCall ("Prelude","_Dict#Show") [Comb FuncCall ("Curry.Position","_impl#show#Prelude.Show#Curry.Position.Position") [],Comb (FuncPartCall 2) ("Curry.Position","_impl#showsPrec#Prelude.Show#Curry.Position.Position") [],Comb FuncCall ("Curry.Position","_impl#showList#Prelude.Show#Curry.Position.Position") []])),Func ("Curry.Position","_impl#show#Prelude.Show#Curry.Position.Position") 0 Public (FuncType (TCons ("Curry.Position","Position") []) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (Rule [] (Comb (FuncPartCall 1) ("Prelude","_def#show#Prelude.Show") [Comb FuncCall ("Curry.Position","_inst#Prelude.Show#Curry.Position.Position") []])),Func ("Curry.Position","_impl#showsPrec#Prelude.Show#Curry.Position.Position") 2 Public (FuncType (TCons ("Prelude","Int") []) (FuncType (TCons ("Curry.Position","Position") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])))) (Rule [1,2] (Case Flex (Var 2) [Branch (Pattern ("Curry.Position","Position") [3,4]) (Comb FuncCall ("Prelude","showParen") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","_impl#<#Prelude.Ord#Prelude.Int") [],Lit (Intc 10)],Var 1],Comb FuncCall ("Prelude",".") [Comb (FuncPartCall 1) ("Prelude","showString") [Comb ConsCall ("Prelude",":") [Lit (Charc 'P'),Comb ConsCall ("Prelude",":") [Lit (Charc 'o'),Comb ConsCall ("Prelude",":") [Lit (Charc 's'),Comb ConsCall ("Prelude",":") [Lit (Charc 'i'),Comb ConsCall ("Prelude",":") [Lit (Charc 't'),Comb ConsCall ("Prelude",":") [Lit (Charc 'i'),Comb ConsCall ("Prelude",":") [Lit (Charc 'o'),Comb ConsCall ("Prelude",":") [Lit (Charc 'n'),Comb ConsCall ("Prelude",":") [Lit (Charc ' '),Comb ConsCall ("Prelude","[]") []]]]]]]]]]],Comb FuncCall ("Prelude",".") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","_impl#showsPrec#Prelude.Show#Prelude.Int") [],Lit (Intc 11)],Var 3],Comb FuncCall ("Prelude",".") [Comb (FuncPartCall 1) ("Prelude","showString") [Comb ConsCall ("Prelude",":") [Lit (Charc ' '),Comb ConsCall ("Prelude","[]") []]],Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","_impl#showsPrec#Prelude.Show#Prelude.Int") [],Lit (Intc 11)],Var 4]]]]]),Branch (Pattern ("Curry.Position","NoPos") []) (Comb (FuncPartCall 1) ("Prelude","showString") [Comb ConsCall ("Prelude",":") [Lit (Charc 'N'),Comb ConsCall ("Prelude",":") [Lit (Charc 'o'),Comb ConsCall ("Prelude",":") [Lit (Charc 'P'),Comb ConsCall ("Prelude",":") [Lit (Charc 'o'),Comb ConsCall ("Prelude",":") [Lit (Charc 's'),Comb ConsCall ("Prelude","[]") []]]]]]])])),Func ("Curry.Position","_impl#showList#Prelude.Show#Curry.Position.Position") 0 Public (FuncType (TCons ("Prelude","[]") [TCons ("Curry.Position","Position") []]) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]))) (Rule [] (Comb (FuncPartCall 2) ("Prelude","_def#showList#Prelude.Show") [Comb FuncCall ("Curry.Position","_inst#Prelude.Show#Curry.Position.Position") []])),Func ("Curry.Position","_inst#Prelude.Read#Curry.Position.Position") 0 Public (TCons ("Prelude","_Dict#Read") [TCons ("Curry.Position","Position") []]) (Rule [] (Comb ConsCall ("Prelude","_Dict#Read") [Comb (FuncPartCall 2) ("Curry.Position","_impl#readsPrec#Prelude.Read#Curry.Position.Position") [],Comb FuncCall ("Curry.Position","_impl#readList#Prelude.Read#Curry.Position.Position") []])),Func ("Curry.Position","_impl#readsPrec#Prelude.Read#Curry.Position.Position") 2 Public (FuncType (TCons ("Prelude","Int") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Curry.Position","Position") [],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]]))) (Rule [1,2] (Comb FuncCall ("Prelude","++") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","readParen") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","_impl#<#Prelude.Ord#Prelude.Int") [],Lit (Intc 10)],Var 1],Comb (FuncPartCall 1) ("Curry.Position","_impl#readsPrec#Prelude.Read#Curry.Position.Position._#lambda1") []],Var 2],Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","readParen") [Comb ConsCall ("Prelude","False") [],Comb (FuncPartCall 1) ("Curry.Position","_impl#readsPrec#Prelude.Read#Curry.Position.Position._#lambda14") []],Var 2]])),Func ("Curry.Position","_impl#readsPrec#Prelude.Read#Curry.Position.Position._#lambda1") 1 Private (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Curry.Position","Position") [],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]])) (Rule [1] (Comb FuncCall ("Prelude","foldr") [Comb (FuncPartCall 2) ("Curry.Position","_impl#readsPrec#Prelude.Read#Curry.Position.Position._#lambda1._#lambda4") [],Comb ConsCall ("Prelude","[]") [],Comb FuncCall ("Prelude","lex") [Var 1]])),Func ("Curry.Position","_impl#readsPrec#Prelude.Read#Curry.Position.Position._#lambda1._#lambda4") 2 Private (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Curry.Position","Position") [],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]]) (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Curry.Position","Position") [],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]]))) (Rule [1,2] (Case Rigid (Var 1) [Branch (Pattern ("Prelude","(,)") [3,4]) (Case Rigid (Var 3) [Branch (Pattern ("Prelude",":") [5,6]) (Case Rigid (Comb FuncCall ("Prelude","_impl#==#Prelude.Eq#Prelude.Char") [Var 5,Lit (Charc 'P')]) [Branch (Pattern ("Prelude","True") []) (Case Rigid (Var 6) [Branch (Pattern ("Prelude",":") [7,8]) (Case Rigid (Comb FuncCall ("Prelude","_impl#==#Prelude.Eq#Prelude.Char") [Var 7,Lit (Charc 'o')]) [Branch (Pattern ("Prelude","True") []) (Case Rigid (Var 8) [Branch (Pattern ("Prelude",":") [9,10]) (Case Rigid (Comb FuncCall ("Prelude","_impl#==#Prelude.Eq#Prelude.Char") [Var 9,Lit (Charc 's')]) [Branch (Pattern ("Prelude","True") []) (Case Rigid (Var 10) [Branch (Pattern ("Prelude",":") [11,12]) (Case Rigid (Comb FuncCall ("Prelude","_impl#==#Prelude.Eq#Prelude.Char") [Var 11,Lit (Charc 'i')]) [Branch (Pattern ("Prelude","True") []) (Case Rigid (Var 12) [Branch (Pattern ("Prelude",":") [13,14]) (Case Rigid (Comb FuncCall ("Prelude","_impl#==#Prelude.Eq#Prelude.Char") [Var 13,Lit (Charc 't')]) [Branch (Pattern ("Prelude","True") []) (Case Rigid (Var 14) [Branch (Pattern ("Prelude",":") [15,16]) (Case Rigid (Comb FuncCall ("Prelude","_impl#==#Prelude.Eq#Prelude.Char") [Var 15,Lit (Charc 'i')]) [Branch (Pattern ("Prelude","True") []) (Case Rigid (Var 16) [Branch (Pattern ("Prelude",":") [17,18]) (Case Rigid (Comb FuncCall ("Prelude","_impl#==#Prelude.Eq#Prelude.Char") [Var 17,Lit (Charc 'o')]) [Branch (Pattern ("Prelude","True") []) (Case Rigid (Var 18) [Branch (Pattern ("Prelude",":") [19,20]) (Case Rigid (Comb FuncCall ("Prelude","_impl#==#Prelude.Eq#Prelude.Char") [Var 19,Lit (Charc 'n')]) [Branch (Pattern ("Prelude","True") []) (Case Rigid (Var 20) [Branch (Pattern ("Prelude","[]") []) (Comb FuncCall ("Prelude","++") [Comb FuncCall ("Prelude","foldr") [Comb (FuncPartCall 2) ("Curry.Position","_impl#readsPrec#Prelude.Read#Curry.Position.Position._#lambda1._#lambda4._#lambda8") [],Comb ConsCall ("Prelude","[]") [],Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","_impl#readsPrec#Prelude.Read#Prelude.Int") [Lit (Intc 11)],Var 4]],Var 2]),Branch (Pattern ("Prelude",":") [21,22]) (Var 2)]),Branch (Pattern ("Prelude","False") []) (Var 2)]),Branch (Pattern ("Prelude","[]") []) (Var 2)]),Branch (Pattern ("Prelude","False") []) (Var 2)]),Branch (Pattern ("Prelude","[]") []) (Var 2)]),Branch (Pattern ("Prelude","False") []) (Var 2)]),Branch (Pattern ("Prelude","[]") []) (Var 2)]),Branch (Pattern ("Prelude","False") []) (Var 2)]),Branch (Pattern ("Prelude","[]") []) (Var 2)]),Branch (Pattern ("Prelude","False") []) (Var 2)]),Branch (Pattern ("Prelude","[]") []) (Var 2)]),Branch (Pattern ("Prelude","False") []) (Var 2)]),Branch (Pattern ("Prelude","[]") []) (Var 2)]),Branch (Pattern ("Prelude","False") []) (Var 2)]),Branch (Pattern ("Prelude","[]") []) (Var 2)]),Branch (Pattern ("Prelude","False") []) (Var 2)]),Branch (Pattern ("Prelude","[]") []) (Var 2)])])),Func ("Curry.Position","_impl#readsPrec#Prelude.Read#Curry.Position.Position._#lambda1._#lambda4._#lambda8") 2 Private (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","Int") [],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Curry.Position","Position") [],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]]) (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Curry.Position","Position") [],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]]))) (Rule [1,2] (Case Rigid (Var 1) [Branch (Pattern ("Prelude","(,)") [3,4]) (Comb FuncCall ("Prelude","++") [Comb FuncCall ("Prelude","foldr") [Comb (FuncPartCall 2) ("Curry.Position","_impl#readsPrec#Prelude.Read#Curry.Position.Position._#lambda1._#lambda4._#lambda8._#lambda12") [Var 3],Comb ConsCall ("Prelude","[]") [],Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","_impl#readsPrec#Prelude.Read#Prelude.Int") [Lit (Intc 11)],Var 4]],Var 2])])),Func ("Curry.Position","_impl#readsPrec#Prelude.Read#Curry.Position.Position._#lambda1._#lambda4._#lambda8._#lambda12") 3 Private (FuncType (TCons ("Prelude","Int") []) (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","Int") [],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Curry.Position","Position") [],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]]) (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Curry.Position","Position") [],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]])))) (Rule [1,2,3] (Case Rigid (Var 2) [Branch (Pattern ("Prelude","(,)") [4,5]) (Comb ConsCall ("Prelude",":") [Comb ConsCall ("Prelude","(,)") [Comb ConsCall ("Curry.Position","Position") [Var 1,Var 4],Var 5],Var 3])])),Func ("Curry.Position","_impl#readsPrec#Prelude.Read#Curry.Position.Position._#lambda14") 1 Private (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Curry.Position","Position") [],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]])) (Rule [1] (Comb FuncCall ("Prelude","foldr") [Comb (FuncPartCall 2) ("Curry.Position","_impl#readsPrec#Prelude.Read#Curry.Position.Position._#lambda14._#lambda17") [],Comb ConsCall ("Prelude","[]") [],Comb FuncCall ("Prelude","lex") [Var 1]])),Func ("Curry.Position","_impl#readsPrec#Prelude.Read#Curry.Position.Position._#lambda14._#lambda17") 2 Private (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Curry.Position","Position") [],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]]) (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Curry.Position","Position") [],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]]))) (Rule [1,2] (Case Rigid (Var 1) [Branch (Pattern ("Prelude","(,)") [3,4]) (Case Rigid (Var 3) [Branch (Pattern ("Prelude",":") [5,6]) (Case Rigid (Comb FuncCall ("Prelude","_impl#==#Prelude.Eq#Prelude.Char") [Var 5,Lit (Charc 'N')]) [Branch (Pattern ("Prelude","True") []) (Case Rigid (Var 6) [Branch (Pattern ("Prelude",":") [7,8]) (Case Rigid (Comb FuncCall ("Prelude","_impl#==#Prelude.Eq#Prelude.Char") [Var 7,Lit (Charc 'o')]) [Branch (Pattern ("Prelude","True") []) (Case Rigid (Var 8) [Branch (Pattern ("Prelude",":") [9,10]) (Case Rigid (Comb FuncCall ("Prelude","_impl#==#Prelude.Eq#Prelude.Char") [Var 9,Lit (Charc 'P')]) [Branch (Pattern ("Prelude","True") []) (Case Rigid (Var 10) [Branch (Pattern ("Prelude",":") [11,12]) (Case Rigid (Comb FuncCall ("Prelude","_impl#==#Prelude.Eq#Prelude.Char") [Var 11,Lit (Charc 'o')]) [Branch (Pattern ("Prelude","True") []) (Case Rigid (Var 12) [Branch (Pattern ("Prelude",":") [13,14]) (Case Rigid (Comb FuncCall ("Prelude","_impl#==#Prelude.Eq#Prelude.Char") [Var 13,Lit (Charc 's')]) [Branch (Pattern ("Prelude","True") []) (Case Rigid (Var 14) [Branch (Pattern ("Prelude","[]") []) (Comb ConsCall ("Prelude",":") [Comb ConsCall ("Prelude","(,)") [Comb ConsCall ("Curry.Position","NoPos") [],Var 4],Var 2]),Branch (Pattern ("Prelude",":") [15,16]) (Var 2)]),Branch (Pattern ("Prelude","False") []) (Var 2)]),Branch (Pattern ("Prelude","[]") []) (Var 2)]),Branch (Pattern ("Prelude","False") []) (Var 2)]),Branch (Pattern ("Prelude","[]") []) (Var 2)]),Branch (Pattern ("Prelude","False") []) (Var 2)]),Branch (Pattern ("Prelude","[]") []) (Var 2)]),Branch (Pattern ("Prelude","False") []) (Var 2)]),Branch (Pattern ("Prelude","[]") []) (Var 2)]),Branch (Pattern ("Prelude","False") []) (Var 2)]),Branch (Pattern ("Prelude","[]") []) (Var 2)])])),Func ("Curry.Position","_impl#readList#Prelude.Read#Curry.Position.Position") 0 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Curry.Position","Position") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]])) (Rule [] (Comb FuncCall ("Prelude","_def#readList#Prelude.Read") [Comb FuncCall ("Curry.Position","_inst#Prelude.Read#Curry.Position.Position") []])),Func ("Curry.Position","rowDist") 2 Public (FuncType (TCons ("Curry.Position","Position") []) (FuncType (TCons ("Curry.Position","Position") []) (TCons ("Prelude","Int") []))) (Rule [1,2] (Case Flex (Var 1) [Branch (Pattern ("Curry.Position","NoPos") []) (Case Flex (Var 2) [Branch (Pattern ("Curry.Position","NoPos") []) (Lit (Intc 0)),Branch (Pattern ("Curry.Position","Position") [3,4]) (Lit (Intc 0))]),Branch (Pattern ("Curry.Position","Position") [5,6]) (Case Flex (Var 2) [Branch (Pattern ("Curry.Position","NoPos") []) (Lit (Intc 0)),Branch (Pattern ("Curry.Position","Position") [7,8]) (Comb FuncCall ("Prelude","_impl#-#Prelude.Num#Prelude.Int") [Var 7,Var 5])])]))] []