Prog "Curry.SpanInfo" ["Curry.Span","Prelude"] [Type ("Curry.SpanInfo","SpanInfo") Public [] [Cons ("Curry.SpanInfo","SpanInfo") 2 Public [TCons ("Curry.Span","Span") [],TCons ("Prelude","[]") [TCons ("Curry.Span","Span") []]],Cons ("Curry.SpanInfo","NoSpanInfo") 0 Public []],Type ("Curry.SpanInfo","_Dict#HasSpanInfo") Public [0] [Cons ("Curry.SpanInfo","_Dict#HasSpanInfo") 2 Public [FuncType (TVar 0) (TCons ("Curry.SpanInfo","SpanInfo") []),FuncType (TCons ("Curry.SpanInfo","SpanInfo") []) (FuncType (TVar 0) (TVar 0))]]] [Func ("Curry.SpanInfo","_def#getSpanInfo#Curry.SpanInfo.HasSpanInfo") 1 Public (FuncType (TCons ("Curry.SpanInfo","_Dict#HasSpanInfo") [TVar 0]) (FuncType (TVar 0) (TCons ("Curry.SpanInfo","SpanInfo") []))) (Rule [] (Var 0)),Func ("Curry.SpanInfo","_def#setSpanInfo#Curry.SpanInfo.HasSpanInfo") 1 Public (FuncType (TCons ("Curry.SpanInfo","_Dict#HasSpanInfo") [TVar 0]) (FuncType (TCons ("Curry.SpanInfo","SpanInfo") []) (FuncType (TVar 0) (TVar 0)))) (Rule [] (Var 0)),Func ("Curry.SpanInfo","_inst#Curry.SpanInfo.HasSpanInfo#Curry.SpanInfo.SpanInfo") 0 Public (TCons ("Curry.SpanInfo","_Dict#HasSpanInfo") [TCons ("Curry.SpanInfo","SpanInfo") []]) (Rule [] (Var 0)),Func ("Curry.SpanInfo","_impl#getSpanInfo#Curry.SpanInfo.HasSpanInfo#Curry.SpanInfo.SpanInfo") 0 Public (FuncType (TCons ("Curry.SpanInfo","SpanInfo") []) (TCons ("Curry.SpanInfo","SpanInfo") [])) (Rule [] (Var 0)),Func ("Curry.SpanInfo","_impl#setSpanInfo#Curry.SpanInfo.HasSpanInfo#Curry.SpanInfo.SpanInfo") 0 Public (FuncType (TCons ("Curry.SpanInfo","SpanInfo") []) (FuncType (TCons ("Curry.SpanInfo","SpanInfo") []) (TCons ("Curry.SpanInfo","SpanInfo") []))) (Rule [] (Var 0)),Func ("Curry.SpanInfo","_inst#Prelude.Eq#Curry.SpanInfo.SpanInfo") 0 Public (TCons ("Prelude","_Dict#Eq") [TCons ("Curry.SpanInfo","SpanInfo") []]) (Rule [] (Var 0)),Func ("Curry.SpanInfo","_impl#==#Prelude.Eq#Curry.SpanInfo.SpanInfo") 2 Public (FuncType (TCons ("Curry.SpanInfo","SpanInfo") []) (FuncType (TCons ("Curry.SpanInfo","SpanInfo") []) (TCons ("Prelude","Bool") []))) (Rule [] (Var 0)),Func ("Curry.SpanInfo","_impl#/=#Prelude.Eq#Curry.SpanInfo.SpanInfo") 0 Public (FuncType (TCons ("Curry.SpanInfo","SpanInfo") []) (FuncType (TCons ("Curry.SpanInfo","SpanInfo") []) (TCons ("Prelude","Bool") []))) (Rule [] (Var 0)),Func ("Curry.SpanInfo","_inst#Prelude.Show#Curry.SpanInfo.SpanInfo") 0 Public (TCons ("Prelude","_Dict#Show") [TCons ("Curry.SpanInfo","SpanInfo") []]) (Rule [] (Var 0)),Func ("Curry.SpanInfo","_impl#show#Prelude.Show#Curry.SpanInfo.SpanInfo") 0 Public (FuncType (TCons ("Curry.SpanInfo","SpanInfo") []) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (Rule [] (Var 0)),Func ("Curry.SpanInfo","_impl#showsPrec#Prelude.Show#Curry.SpanInfo.SpanInfo") 2 Public (FuncType (TCons ("Prelude","Int") []) (FuncType (TCons ("Curry.SpanInfo","SpanInfo") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])))) (Rule [] (Var 0)),Func ("Curry.SpanInfo","_impl#showList#Prelude.Show#Curry.SpanInfo.SpanInfo") 0 Public (FuncType (TCons ("Prelude","[]") [TCons ("Curry.SpanInfo","SpanInfo") []]) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]))) (Rule [] (Var 0)),Func ("Curry.SpanInfo","_inst#Prelude.Read#Curry.SpanInfo.SpanInfo") 0 Public (TCons ("Prelude","_Dict#Read") [TCons ("Curry.SpanInfo","SpanInfo") []]) (Rule [] (Var 0)),Func ("Curry.SpanInfo","_impl#readsPrec#Prelude.Read#Curry.SpanInfo.SpanInfo") 2 Public (FuncType (TCons ("Prelude","Int") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Curry.SpanInfo","SpanInfo") [],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]]))) (Rule [] (Var 0)),Func ("Curry.SpanInfo","_impl#readsPrec#Prelude.Read#Curry.SpanInfo.SpanInfo._#lambda1") 1 Private (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Curry.SpanInfo","SpanInfo") [],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]])) (Rule [] (Var 0)),Func ("Curry.SpanInfo","_impl#readsPrec#Prelude.Read#Curry.SpanInfo.SpanInfo._#lambda1._#lambda4") 2 Private (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Curry.SpanInfo","SpanInfo") [],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]]) (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Curry.SpanInfo","SpanInfo") [],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]]))) (Rule [] (Var 0)),Func ("Curry.SpanInfo","_impl#readsPrec#Prelude.Read#Curry.SpanInfo.SpanInfo._#lambda1._#lambda4._#lambda8") 2 Private (FuncType (TCons ("Prelude","(,)") [TCons ("Curry.Span","Span") [],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Curry.SpanInfo","SpanInfo") [],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]]) (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Curry.SpanInfo","SpanInfo") [],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]]))) (Rule [] (Var 0)),Func ("Curry.SpanInfo","_impl#readsPrec#Prelude.Read#Curry.SpanInfo.SpanInfo._#lambda1._#lambda4._#lambda8._#lambda12") 3 Private (FuncType (TCons ("Curry.Span","Span") []) (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Curry.Span","Span") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Curry.SpanInfo","SpanInfo") [],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]]) (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Curry.SpanInfo","SpanInfo") [],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]])))) (Rule [] (Var 0)),Func ("Curry.SpanInfo","_impl#readsPrec#Prelude.Read#Curry.SpanInfo.SpanInfo._#lambda14") 1 Private (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Curry.SpanInfo","SpanInfo") [],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]])) (Rule [] (Var 0)),Func ("Curry.SpanInfo","_impl#readsPrec#Prelude.Read#Curry.SpanInfo.SpanInfo._#lambda14._#lambda17") 2 Private (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Curry.SpanInfo","SpanInfo") [],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]]) (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Curry.SpanInfo","SpanInfo") [],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]]))) (Rule [] (Var 0)),Func ("Curry.SpanInfo","_impl#readList#Prelude.Read#Curry.SpanInfo.SpanInfo") 0 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Curry.SpanInfo","SpanInfo") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]])) (Rule [] (Var 0)),Func ("Curry.SpanInfo","getSrcSpan") 2 Public (FuncType (TCons ("Curry.SpanInfo","_Dict#HasSpanInfo") [TVar 0]) (FuncType (TVar 0) (TCons ("Curry.Span","Span") []))) (Rule [] (Var 0)),Func ("Curry.SpanInfo","getSrcInfoPoints") 2 Public (FuncType (TCons ("Curry.SpanInfo","_Dict#HasSpanInfo") [TVar 0]) (FuncType (TVar 0) (TCons ("Prelude","[]") [TCons ("Curry.Span","Span") []]))) (Rule [] (Var 0)),Func ("Curry.SpanInfo","getSpanInfo") 1 Public (FuncType (TCons ("Curry.SpanInfo","_Dict#HasSpanInfo") [TVar 0]) (FuncType (TVar 0) (TCons ("Curry.SpanInfo","SpanInfo") []))) (Rule [] (Var 0)),Func ("Curry.SpanInfo","setSpanInfo") 1 Public (FuncType (TCons ("Curry.SpanInfo","_Dict#HasSpanInfo") [TVar 0]) (FuncType (TCons ("Curry.SpanInfo","SpanInfo") []) (FuncType (TVar 0) (TVar 0)))) (Rule [] (Var 0))] []